#!/bin/bash
# vim:set et ts=4 sw=4 ft=bash ai:

# WARNING: This script works only for main (no contrib)

ARCHIVE='tmax'
SUITES="gorani"
ARCHES="all amd64 arm64 i386"

REPOSITORY="http://192.168.1.211:8080/tmax/dists"

. common

# Redirect the output to a log file
#exec >> /srv/wanna-build/db/merge.$ARCHIVE.log 2>&1

if [ -f /srv/wanna-build/NO-TRIGGERS ]
then
	echo Trigger for $ARCHIVE skipped due to NO-TRIGGERS, aborting. >&2
	exit 0
fi

echo "`date`: Running trigger for $ARCHIVE ..."

fetch() {
	src="$1"
	dest="$2"

	mkdir -p "$(dirname $dest)"
	wget  -P "$dest" "$src" -O "$dest".download
	mv "$dest".download "$dest"
}

main_sync() {
	ensure_lock
	ensure_workdir

	# Fetch the most recent Packages and Sources files.
	for suite in $SUITES
	do
		fetch "$REPOSITORY/$suite/main/source/Sources.xz" "$ARCHIVE_BASE/archive/$suite/main/source/Sources.xz"

		for arch in $ARCHES
		do
			fetch "$REPOSITORY/$suite/main/binary-$arch/Packages.xz" "$ARCHIVE_BASE/archive/$suite/main/binary-$arch/Packages.xz"
		done
	done

	for suite in $SUITES
	do
        
		SOURCES="$ARCHIVE_BASE/archive/$suite/main/source/Sources.xz"
		PACKAGES="$ARCHIVE_BASE/archive/$suite/main/binary-%ARCH%/Packages.xz"
		trigger_wb_update "$suite" "$ARCHES" "$SOURCES" "$PACKAGES"
	done

	cleanup
}

main() {
    set -eE
    trap cleanup ERR TERM HUP INT QUIT

    save-database pre

    main_sync

    save-database post
    do_stats
}

main
exit 0
